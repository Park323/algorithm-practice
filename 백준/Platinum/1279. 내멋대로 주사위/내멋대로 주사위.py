debug = False

if debug:
    import sys
    sys.stdin = open('input_1279.txt')
    input = sys.stdin.readline

denom = 1000000007

def main():
    M = int(input())
    
    """
          E
    A B C D
          F
          
    일때, 회전 가짓수 24개 (6개 면을 축으로, 4 회전)

    6! / 24 = 30가지
    
    1. 가짓수는 어떻게 셀 것인가?
    - 평균마다 횟수가 정해짐
      - M=3 -> 0
      - M=4 -> 19 ~ 24 분배 -> (1, (s=2, N=23)), (2, (s=3,N=22)), ...
                            -> (1, 2, (s=3, N=21)), (1, 3, (s=4, N=20)), ...
                        21 :: (1,2,3,4,5,6)
                        22 :: (1,2,3,4,5,7)
                        23 :: (1,2,3,4,5,8), (1,2,3,4,6,7)
                        24 :: (1,2,3,4,5,9), (1,2,3,4,6,8), (1,2,3,5,6,7)
      - M=5 -> (M=4 case) + 25 ~ 30 분배.
    
    2. 회전시켜서 같은 것을 어떻게 판단할 것인가? -> (1) 하나의 주사위를 회전시켜 얻을 수 있는 가짓수 = 6, 전체 횟수를 6으로 나누자.
    """
    
    """
    합 K를 만드는 수열을 누적하자
    [N=2]  # N=1, K=K-1*2
    K = 1: X
    K = 2: X
    K = 3: (1, 2)
    K = 4: (1, 3)  # N=2, K=2*2
    K = 5: (1, 4), (2, 3)
    K = 6: (1, 5), (2, 4)
    K = 7: (1, 6), (2, 5), (3, 4)
    ...
    [N=3]   # N=2, K=K-1*3
    K = 6:  (1, 2, 3)
    K = 7:  (1, 2, 4)
    K = 8:  (1, 2, 5), (1, 3, 4)                        # N=2, K=K-2*3
    K = 9:  (1, 2, 6), (1, 3, 5),                       (2, 3, 4)
    K = 10: (1, 2, 7), (1, 3, 6), (1, 4, 5),            (2, 3, 5)
    K = 11: (1, 2, 8), (1, 3, 7), (1, 4, 6),            (2, 3, 6), (2, 4, 5)             # N=3, K=K-3*3
    K = 12: (1, 2, 9), (1, 3, 8), (1, 4, 7), (1, 5, 6), (2, 3, 7), (2, 4, 6)           , (3, 4, 5)
    K = 13: (1, 2, 10),(1, 3, 9), (1, 4, 8), (1, 5, 7), (2, 3, 8), (2, 4, 7), (2, 5, 6)
    """

    MAX_M = M
    
    dp = [0] + [1]*(6*MAX_M)
    answer = 0
    for n in range(2, 7):
        for k in range(1, 6*MAX_M+1):
            dp[k] = (dp[k] + dp[max(0, k-n)]) % denom
            if n == 6 and k < len(dp)-2-3-4-5-6:
                answer += (dp[k] * 30) % denom
                answer %= denom
    
    # answer = sum(dp[:len(dp)-2-3-4-5-6]) * 30 % denom
    print(answer)
    return answer


if debug:
    if __name__ == "__main__":
        T = int(input().strip())
        for t in range(T):
            print(f"[{t+1}th case]")
            main()
else:
    main()
